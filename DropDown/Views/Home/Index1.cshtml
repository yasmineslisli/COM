@model PaginatedList<DropDown.Models.Objectif>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html>
    <head>
    <link href="~/css/site.css" rel="stylesheet" />
    </head>
    <body>
    <i class="pull-left "><img src="~/img/icons8-home-48.png" /></i>
    <span><h1>/</h1></span>


        <br />
    <br />
    <br />
    <button id="export" class="btn btn-secondary">Exporter en excel</button>
    <form asp-action="Index1" method="get">
        <div class="form-actions no-color">
            <p>
                Chercher par Programme, Projet,Action, DR ou Exercice <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Chercher" class="btn btn-default" /> |
                <a asp-action="Index1">Revenir</a>
            </p>
        </div>
    </form>
<table class="styled-table table-sm" id="MyTable">
        <col>
        <colgroup span="2"></colgroup>
        <colgroup span="2"></colgroup>
        
        <tr>
            
            <th colspan="1">
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["ProgrammeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Programme</a>
            </th>
            <th colspan="1">
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["ProjetSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Projet</a>
            </th>
            <th colspan="1">
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["ActionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Action</a>
            </th>
            <th colspan="1">
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["DrSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Direction Régionale</a>
            </th>
            <th colspan="1">
                <a asp-action="Index1" asp-route-sortOrder="@ViewData["ExerciceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Exercice</a>
            </th>
            <th colspan="3" scope="colgroup" class="text-center">Stock</th>
            <th colspan="3" scope="colgroup" class="text-center">Prévision</th>
        </tr>
        <tr>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col">Nombre</th>
            <th scope="col">Superficie</th>
            <th scope="col">Valeur</th>
            <th scope="col">Nombre</th>
            <th scope="col">Superficie</th>
            <th scope="col">Valeur</th>
        </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ActionProj.Projet.Programme.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActionProj.Projet.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActionProj.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dr.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Exercice.Annee)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stocks.FirstOrDefault().Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stocks.FirstOrDefault().Superficie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Stocks.FirstOrDefault().Valeur)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Prévisions.FirstOrDefault().Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Prévisions.FirstOrDefault().Superficie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Prévisions.FirstOrDefault().Valeur)
            </td>
           

            
        </tr>
    }
        
            @*<th scope="row"></th>*@
           
         
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index1"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Précèdent
    </a>
    <a asp-action="Index1"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Suivant
    </a>
</body>
</html>

<script src="~/js/table2excel.js"></script>
<script>
    var table2excel = new Table2Excel();

    document.getElementById('export').addEventListener('click', function () {
        table2excel.export(document.querySelectorAll('table'));
    });
</script>
