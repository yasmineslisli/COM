@model PaginatedList<DropDown.Models.Stock>

@{
    ViewData["Title"] = "ListStock";
}
<!DOCTYPE html>
<html lang="en">
<head>
    

    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="~/css/site.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Handle button click event
            $('#export').click(function () {
                // Make AJAX request to export stock data
                $.ajax({
                    url: '/Stock/ExportStockData',
                    method: 'POST',
                    success: function (response) {
                        // Trigger file download
                        var link = document.createElement('a');
                        link.href = response.filePath;
                        link.download = response.fileName;
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);

                        // Show success message
                        $('#message').text(response.message);
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        console.log(error);

                        // Show error message
                        $('#message').text("File download failed");
                    }
                });

                // Make AJAX request to check status
                $.ajax({
                    url: '/Stock/ExportStockData',
                    method: 'GET',
                    success: function (response) {
                        if (response.success) {
                            // File downloaded successfully
                            console.log("File path: " + response.filePath);
                            console.log("File name: " + response.fileName);
                        } else {
                            // File download failed
                            console.log(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        console.log(error);
                    }
                });
            });
        });
    </script>




</head>

<i class="pull-left "><img src="~/img/icons8-home-48.png" /></i>
<span><h1>/Stock/Liste des Stocks</h1></span>



<form class="d-inline-block" asp-controller="Cascade" asp-action="CascadeDropDown">
    <div class="form-group mb-2 d-inline-block">
        <input name="button" value="stockId" hidden />
    </div>
    <div class="input-group">
        <label class="form-control rounded"> Ajouter une nouvelle prévision</label>
        <button type="submit" class="btn btn-outline-primary">Ajouter</button>
    </div>
</form>
        </br>
        </br>

<form asp-action="ListStock" method="get">
    <div class="input-group">

        <input type="text" name="SearchString" class="form-control rounded" placeholder="Chercher par Programme, Projet, Action, DR ou Exercice" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Chercher" class="btn btn-outline-primary" />
        <a asp-action="ListStock" class="btn btn-outline-primary">Revenir</a>

    </div>
</form>
<table class="styled-table">
    <thead>
        <tr>
            <th>
                <a asp-action="ListStock" asp-route-sortOrder="@ViewData["ProgrammeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Programme</a>

            </th>
            <th>
                <a asp-action="ListStock" asp-route-sortOrder="@ViewData["ProjetSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Projet</a>

            </th>
            <th>
                <a asp-action="ListStock" asp-route-sortOrder="@ViewData["ActionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Action</a>

            </th>
            <th>
                <a asp-action="ListStock" asp-route-sortOrder="@ViewData["DrSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Direction Régionale</a>

            </th>
            <th>
                <a asp-action="ListStock" asp-route-sortOrder="@ViewData["ExerciceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Exercice</a>

            </th>
           


            <th>
                Nombre      
            </th>
            <th>
                Superficie
            </th>
            <th>
                Valeur
            </th>
            <th>
                Date
            </th>




            
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Objectif.ActionProj.Projet.Programme.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Objectif.ActionProj.Projet.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Objectif.ActionProj.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Objectif.Dr.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Objectif.Exercice.Annee)
                </td>
                


                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Superficie)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Valeur)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Modifier</a>
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.Id">Supprimer</a>

                </td>
            </tr>
        }
    </tbody>
</table>
</html>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="ListStock"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Précèdent
</a>
<a asp-action="ListStock"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Suivant
</a>
<div class="col-md-12 text-center">
    <button id="export" class="btn btn-secondary">Exporter en excel</button>
</div>
<div id="message"></div>

